name: Build

on:
  push:
    branches:
    - develop
    paths: 
      - '**'
      - '!.editorconfig'
      - '!.gitattributes'
      - '!.gitignore'
      - '!*.md'
      - '!LICENSE'

env:
  VERBOSITY:  'Normal'
  CONFIGURATION: 'Debug'
  ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
  GITHUB_TOKEN: ${{ github.token }}
  
jobs: 
  Build:
    name: Build TinyCLR    
    runs-on: [windows-latest]

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Extract build information into variables
      id: info
      run: |
        echo "##[set-output name=build;]$(echo $(git rev-list --count HEAD))"
        echo "##[set-output name=copyright;]$(echo Â© $(date -u +%Y) Bytewizer.  All rights reserved.)"

    - name: Show build information
      run: |
        echo build=${{ steps.info.outputs.build }}
        echo copyright=${{ steps.info.outputs.copyright }}
    
    - name: Setup msbuild
      uses: microsoft/setup-msbuild@v1.1
      with:
        msbuild-architecture: x64
    
    - name: Setup nuget
      uses: nuget/setup-nuget@v1.0.5

    - name: Setup nuget sources
      run: |
        nuget sources add -name github.com -source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" -username ${{ github.actor }} -password ${{secrets.PACKAGE_API_KEY}}

    - name: Restore TinyCLR project
      working-directory: src
      run: >- 
        nuget restore Bytewizer.TinyCLR.Boards.sln -PackagesDirectory ./packages -verbosity ${env:VERBOSITY}

    - name: Build and pack TinyCLR libraries
      working-directory: src
      run: >- 
        msbuild Bytewizer.TinyCLR.Boards.sln -t:pack -verbosity:${env:VERBOSITY}
        -p:PackageOutputPath=\builds\artifacts
        -p:BuildNumber="${{ steps.info.outputs.build }}"
        -p:Copyright="${{ steps.info.outputs.copyright }}"
        -p:VersionPrefix="2.1.1"
        -p:VersionSuffix=preview.${{ steps.info.outputs.build }}
        -p:Configuration=${env:CONFIGURATION}
        -p:ContinuousIntegrationBuild=true

    - name: Upload build artifacts
      uses: actions/upload-artifact@v2.3.1
      with:
        name: Build Packages ${{ steps.info.outputs.build }} 
        path: \builds\artifacts

    - name: Publish package to github.com
      run: |
        nuget push \builds\artifacts\**\*.nupkg -source github.com -apikey ${{secrets.PACKAGE_API_KEY}} -skipduplicate